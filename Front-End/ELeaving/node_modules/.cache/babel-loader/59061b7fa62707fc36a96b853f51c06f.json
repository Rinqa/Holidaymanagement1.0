{"ast":null,"code":"import _objectSpread from \"C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\iFix\\\\Documents\\\\GitHub\\\\Holidaymanagement1.0\\\\Front-End\\\\ELeaving\\\\src\\\\views\\\\charts\\\\ChartBarSimple.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor } from '@coreui/utils';\nimport { CChartBar } from '@coreui/react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChartBarSimple = function ChartBarSimple(props) {\n  var backgroundColor = props.backgroundColor,\n      pointHoverBackgroundColor = props.pointHoverBackgroundColor,\n      dataPoints = props.dataPoints,\n      label = props.label,\n      pointed = props.pointed,\n      attributes = _objectWithoutProperties(props, [\"backgroundColor\", \"pointHoverBackgroundColor\", \"dataPoints\", \"label\", \"pointed\"]);\n\n  var defaultDatasets = function () {\n    return [{\n      data: dataPoints,\n      backgroundColor: getColor(backgroundColor),\n      pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n      label: label,\n      barPercentage: 0.5,\n      categoryPercentage: 1\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/_jsxDEV(CChartBar, _objectSpread(_objectSpread({}, attributes), {}, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ChartBarSimple;\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\nexport default ChartBarSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBarSimple\");","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/src/views/charts/ChartBarSimple.js"],"names":["React","PropTypes","getColor","CChartBar","ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","defaultDatasets","data","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAE9B,MACEC,eADF,GAOID,KAPJ,CACEC,eADF;AAAA,MAEEC,yBAFF,GAOIF,KAPJ,CAEEE,yBAFF;AAAA,MAGEC,UAHF,GAOIH,KAPJ,CAGEG,UAHF;AAAA,MAIEC,KAJF,GAOIJ,KAPJ,CAIEI,KAJF;AAAA,MAKEC,OALF,GAOIL,KAPJ,CAKEK,OALF;AAAA,MAMKC,UANL,4BAOIN,KAPJ;;AASA,MAAMO,eAAe,GAAI,YAAI;AAC3B,WAAO,CACL;AACEC,MAAAA,IAAI,EAAEL,UADR;AAEEF,MAAAA,eAAe,EAAEJ,QAAQ,CAACI,eAAD,CAF3B;AAGEC,MAAAA,yBAAyB,EAAEL,QAAQ,CAACK,yBAAD,CAHrC;AAIEE,MAAAA,KAAK,EAAEA,KAJT;AAKEK,MAAAA,aAAa,EAAE,GALjB;AAMEC,MAAAA,kBAAkB,EAAE;AANtB,KADK,CAAP;AAUD,GAXuB,EAAxB;;AAaA,MAAMC,cAAc,GAAI,YAAI;AAC1B,WAAO;AACLC,MAAAA,mBAAmB,EAAE,KADhB;AAELC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OAFH;AAKLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACNF,UAAAA,OAAO,EAAE;AADH,SAAD,CADD;AAING,QAAAA,KAAK,EAAE,CAAC;AACNH,UAAAA,OAAO,EAAE;AADH,SAAD;AAJD;AALH,KAAP;AAcD,GAfsB,EAAvB,CAxB8B,CAyC9B;;;AACA,sBACE,QAAC,SAAD,kCACMR,UADN;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,IAAA,OAAO,EAAEI,cAHX;AAIE,IAAA,MAAM,EAAEP;AAJV;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAlDD;;KAAML,c;AAoDNA,cAAc,CAACmB,SAAf,GAA2B;AACzBC,EAAAA,GAAG,EAAEvB,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAAC0B,MAA3B,CAApB,CADoB;AAEzBC,EAAAA,SAAS,EAAE3B,SAAS,CAAC0B,MAFI;AAGzB;AACArB,EAAAA,eAAe,EAAEL,SAAS,CAAC0B,MAJF;AAKzBpB,EAAAA,yBAAyB,EAAEN,SAAS,CAAC0B,MALZ;AAMzBnB,EAAAA,UAAU,EAAEP,SAAS,CAAC4B,KANG;AAOzBpB,EAAAA,KAAK,EAAER,SAAS,CAAC0B,MAPQ;AAQzBjB,EAAAA,OAAO,EAAET,SAAS,CAAC6B;AARM,CAA3B;AAWA1B,cAAc,CAAC2B,YAAf,GAA8B;AAC5BzB,EAAAA,eAAe,EAAE,gBADW;AAE5BE,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAFgB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAA9B;AAMA,eAAeL,cAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n"]},"metadata":{},"sourceType":"module"}