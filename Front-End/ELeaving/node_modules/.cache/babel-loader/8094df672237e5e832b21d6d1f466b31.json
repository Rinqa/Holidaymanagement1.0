{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toInteger = require('../internals/to-integer');\n\nvar thisNumberValue = require('../internals/this-number-value');\n\nvar repeat = require('../internals/string-repeat');\n\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function pow(x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function log(x) {\n  var n = 0;\n  var x2 = x;\n\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  }\n\n  return n;\n};\n\nvar multiply = function multiply(data, n, c) {\n  var index = -1;\n  var c2 = c;\n\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function divide(data, n) {\n  var index = 6;\n  var c = 0;\n\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = c % n * 1e7;\n  }\n};\n\nvar dataToString = function dataToString(data) {\n  var index = 6;\n  var s = '';\n\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  }\n\n  return s;\n};\n\nvar FORCED = nativeToFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128.0.toFixed(0) !== '1000000000000000128') || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n}); // `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n\n$({\n  target: 'Number',\n  proto: true,\n  forced: FORCED\n}, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits'); // eslint-disable-next-line no-self-compare -- NaN check\n\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits ? '0.' + repeat.call('0', fractDigits - k) + result : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    }\n\n    return result;\n  }\n});","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/core-js/modules/es.number.to-fixed.js"],"names":["$","require","toInteger","thisNumberValue","repeat","fails","nativeToFixed","toFixed","floor","Math","pow","x","n","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","String","call","length","FORCED","target","proto","forced","fractionDigits","number","fractDigits","sign","result","e","z","j","k","RangeError","slice"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}