{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nexport var Context = /*#__PURE__*/React.createContext({}); //component - CoreUI / CSidebar\n\nvar CSidebar = function CSidebar(props) {\n  var children = props.children,\n      className = props.className,\n      innerRef = props.innerRef,\n      breakpoint = props.breakpoint,\n      show = props.show,\n      fixed = props.fixed,\n      unfoldable = props.unfoldable,\n      minimize = props.minimize,\n      size = props.size,\n      hideOnMobileClick = props.hideOnMobileClick,\n      aside = props.aside,\n      colorScheme = props.colorScheme,\n      overlaid = props.overlaid,\n      dropdownMode = props.dropdownMode,\n      onShowChange = props.onShowChange,\n      onMinimizeChange = props.onMinimizeChange,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"innerRef\", \"breakpoint\", \"show\", \"fixed\", \"unfoldable\", \"minimize\", \"size\", \"hideOnMobileClick\", \"aside\", \"colorScheme\", \"overlaid\", \"dropdownMode\", \"onShowChange\", \"onMinimizeChange\"]);\n\n  var key = useState(Math.random().toString(36).substr(2))[0];\n\n  var _useState = useState(show),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(),\n      openDropdown = _useState2[0],\n      setOpenDropdown = _useState2[1];\n\n  var node = useRef({}).current;\n\n  var reference = function reference(r) {\n    node.current = r;\n    innerRef && innerRef(r);\n  };\n\n  var _useState3 = useState(minimize),\n      minimized = _useState3[0],\n      setIsMinimized = _useState3[1];\n\n  useMemo(function () {\n    setIsMinimized(minimize);\n  }, [minimize]);\n\n  var toggleMinimize = function toggleMinimize() {\n    setIsMinimized(!minimized);\n    onMinimizeChange && onMinimizeChange(minimized);\n  };\n\n  useMemo(function () {\n    setIsOpen(show);\n  }, [show]);\n  useEffect(function () {\n    isOpen === true ? createBackdrop() : removeBackdrop();\n    return function () {\n      return removeBackdrop();\n    };\n  }, [isOpen]); //methods\n\n  var sidebarCloseListener = function sidebarCloseListener(e) {\n    if (document.getElementById(key + 'backdrop') && !node.current.contains(e.target)) {\n      closeSidebar();\n    }\n  };\n\n  var onKeydown = function onKeydown(e) {\n    e.key.includes('Esc') && isAutoclosable() && closeSidebar();\n  };\n\n  var createBackdrop = function createBackdrop() {\n    var backdrop = document.createElement('div');\n\n    if (overlaid) {\n      document.addEventListener('click', sidebarCloseListener);\n    } else {\n      backdrop.addEventListener('click', closeSidebar);\n    }\n\n    document.addEventListener('keydown', onKeydown);\n    backdrop.className = 'c-sidebar-backdrop c-show';\n    backdrop.id = key + 'backdrop';\n    document.body.appendChild(backdrop);\n  };\n\n  var removeBackdrop = function removeBackdrop() {\n    var backdrop = document.getElementById(key + 'backdrop');\n\n    if (backdrop) {\n      document.removeEventListener('click', sidebarCloseListener);\n      backdrop.removeEventListener('click', closeSidebar);\n      document.removeEventListener('keydown', onKeydown);\n      document.body.removeChild(backdrop);\n    }\n  };\n\n  var closeSidebar = function closeSidebar() {\n    if (typeof onShowChange === 'function') {\n      onShowChange(overlaid ? false : 'responsive');\n    } else {\n      setIsOpen(overlaid ? false : 'responsive');\n    }\n  };\n\n  var isOnMobile = function isOnMobile() {\n    return Boolean(getComputedStyle(node.current).getPropertyValue('--is-mobile'));\n  };\n\n  var isAutoclosable = function isAutoclosable() {\n    return isOnMobile() || overlaid;\n  };\n\n  var onSidebarClick = function onSidebarClick(e) {\n    var sidebarItemClicked = String(e.target.className).includes('c-sidebar-nav-link');\n\n    if (sidebarItemClicked && hideOnMobileClick && isAutoclosable()) {\n      closeSidebar();\n    }\n  }; // render\n\n\n  var haveResponsiveClass = breakpoint && isOpen === 'responsive';\n  var classes = classNames('c-sidebar', colorScheme && \"c-sidebar-\" + colorScheme, isOpen === true && 'c-sidebar-show', haveResponsiveClass && \"c-sidebar-\" + breakpoint + \"-show\", fixed && !overlaid && 'c-sidebar-fixed', aside && 'c-sidebar-right', minimized && !unfoldable && 'c-sidebar-minimized', minimized && unfoldable && 'c-sidebar-unfoldable', overlaid && 'c-sidebar-overlaid', size && \"c-sidebar-\" + size, className);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      dropdownMode: dropdownMode,\n      scrollbarExist: !minimized || unfoldable,\n      toggleMinimize: toggleMinimize,\n      openDropdown: openDropdown,\n      setOpenDropdown: setOpenDropdown\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classes\n  }, attributes, {\n    ref: reference,\n    onClick: onSidebarClick\n  }), children));\n};\n\nCSidebar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  fixed: PropTypes.bool,\n  unfoldable: PropTypes.bool,\n  overlaid: PropTypes.bool,\n  breakpoint: PropTypes.oneOf([false, '', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  minimize: PropTypes.bool,\n  show: PropTypes.oneOf(['', true, false, 'responsive']),\n  size: PropTypes.oneOf(['', 'sm', 'lg', 'xl']),\n  hideOnMobileClick: PropTypes.bool,\n  aside: PropTypes.bool,\n  colorScheme: PropTypes.string,\n  dropdownMode: PropTypes.oneOf(['', 'openActive', 'close', 'closeInactive', 'noAction']),\n  onShowChange: PropTypes.func,\n  onMinimizeChange: PropTypes.func\n};\nCSidebar.defaultProps = {\n  fixed: true,\n  breakpoint: 'lg',\n  show: 'responsive',\n  hideOnMobileClick: true,\n  colorScheme: 'dark'\n};\nexport default CSidebar;","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/@coreui/react/es/template/CSidebar.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useState","useRef","useMemo","useEffect","PropTypes","classNames","Context","createContext","CSidebar","props","children","className","innerRef","breakpoint","show","fixed","unfoldable","minimize","size","hideOnMobileClick","aside","colorScheme","overlaid","dropdownMode","onShowChange","onMinimizeChange","attributes","key","Math","random","toString","substr","_useState","isOpen","setIsOpen","_useState2","openDropdown","setOpenDropdown","node","current","reference","r","_useState3","minimized","setIsMinimized","toggleMinimize","createBackdrop","removeBackdrop","sidebarCloseListener","e","document","getElementById","contains","target","closeSidebar","onKeydown","includes","isAutoclosable","backdrop","createElement","addEventListener","id","body","appendChild","removeEventListener","removeChild","isOnMobile","Boolean","getComputedStyle","getPropertyValue","onSidebarClick","sidebarItemClicked","String","haveResponsiveClass","classes","Provider","value","scrollbarExist","ref","onClick","propTypes","oneOfType","string","array","object","func","bool","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nexport var Context = /*#__PURE__*/React.createContext({}); //component - CoreUI / CSidebar\n\nvar CSidebar = function CSidebar(props) {\n  var children = props.children,\n      className = props.className,\n      innerRef = props.innerRef,\n      breakpoint = props.breakpoint,\n      show = props.show,\n      fixed = props.fixed,\n      unfoldable = props.unfoldable,\n      minimize = props.minimize,\n      size = props.size,\n      hideOnMobileClick = props.hideOnMobileClick,\n      aside = props.aside,\n      colorScheme = props.colorScheme,\n      overlaid = props.overlaid,\n      dropdownMode = props.dropdownMode,\n      onShowChange = props.onShowChange,\n      onMinimizeChange = props.onMinimizeChange,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"innerRef\", \"breakpoint\", \"show\", \"fixed\", \"unfoldable\", \"minimize\", \"size\", \"hideOnMobileClick\", \"aside\", \"colorScheme\", \"overlaid\", \"dropdownMode\", \"onShowChange\", \"onMinimizeChange\"]);\n\n  var key = useState(Math.random().toString(36).substr(2))[0];\n\n  var _useState = useState(show),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(),\n      openDropdown = _useState2[0],\n      setOpenDropdown = _useState2[1];\n\n  var node = useRef({}).current;\n\n  var reference = function reference(r) {\n    node.current = r;\n    innerRef && innerRef(r);\n  };\n\n  var _useState3 = useState(minimize),\n      minimized = _useState3[0],\n      setIsMinimized = _useState3[1];\n\n  useMemo(function () {\n    setIsMinimized(minimize);\n  }, [minimize]);\n\n  var toggleMinimize = function toggleMinimize() {\n    setIsMinimized(!minimized);\n    onMinimizeChange && onMinimizeChange(minimized);\n  };\n\n  useMemo(function () {\n    setIsOpen(show);\n  }, [show]);\n  useEffect(function () {\n    isOpen === true ? createBackdrop() : removeBackdrop();\n    return function () {\n      return removeBackdrop();\n    };\n  }, [isOpen]); //methods\n\n  var sidebarCloseListener = function sidebarCloseListener(e) {\n    if (document.getElementById(key + 'backdrop') && !node.current.contains(e.target)) {\n      closeSidebar();\n    }\n  };\n\n  var onKeydown = function onKeydown(e) {\n    e.key.includes('Esc') && isAutoclosable() && closeSidebar();\n  };\n\n  var createBackdrop = function createBackdrop() {\n    var backdrop = document.createElement('div');\n\n    if (overlaid) {\n      document.addEventListener('click', sidebarCloseListener);\n    } else {\n      backdrop.addEventListener('click', closeSidebar);\n    }\n\n    document.addEventListener('keydown', onKeydown);\n    backdrop.className = 'c-sidebar-backdrop c-show';\n    backdrop.id = key + 'backdrop';\n    document.body.appendChild(backdrop);\n  };\n\n  var removeBackdrop = function removeBackdrop() {\n    var backdrop = document.getElementById(key + 'backdrop');\n\n    if (backdrop) {\n      document.removeEventListener('click', sidebarCloseListener);\n      backdrop.removeEventListener('click', closeSidebar);\n      document.removeEventListener('keydown', onKeydown);\n      document.body.removeChild(backdrop);\n    }\n  };\n\n  var closeSidebar = function closeSidebar() {\n    if (typeof onShowChange === 'function') {\n      onShowChange(overlaid ? false : 'responsive');\n    } else {\n      setIsOpen(overlaid ? false : 'responsive');\n    }\n  };\n\n  var isOnMobile = function isOnMobile() {\n    return Boolean(getComputedStyle(node.current).getPropertyValue('--is-mobile'));\n  };\n\n  var isAutoclosable = function isAutoclosable() {\n    return isOnMobile() || overlaid;\n  };\n\n  var onSidebarClick = function onSidebarClick(e) {\n    var sidebarItemClicked = String(e.target.className).includes('c-sidebar-nav-link');\n\n    if (sidebarItemClicked && hideOnMobileClick && isAutoclosable()) {\n      closeSidebar();\n    }\n  }; // render\n\n\n  var haveResponsiveClass = breakpoint && isOpen === 'responsive';\n  var classes = classNames('c-sidebar', colorScheme && \"c-sidebar-\" + colorScheme, isOpen === true && 'c-sidebar-show', haveResponsiveClass && \"c-sidebar-\" + breakpoint + \"-show\", fixed && !overlaid && 'c-sidebar-fixed', aside && 'c-sidebar-right', minimized && !unfoldable && 'c-sidebar-minimized', minimized && unfoldable && 'c-sidebar-unfoldable', overlaid && 'c-sidebar-overlaid', size && \"c-sidebar-\" + size, className);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      dropdownMode: dropdownMode,\n      scrollbarExist: !minimized || unfoldable,\n      toggleMinimize: toggleMinimize,\n      openDropdown: openDropdown,\n      setOpenDropdown: setOpenDropdown\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classes\n  }, attributes, {\n    ref: reference,\n    onClick: onSidebarClick\n  }), children));\n};\n\nCSidebar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  fixed: PropTypes.bool,\n  unfoldable: PropTypes.bool,\n  overlaid: PropTypes.bool,\n  breakpoint: PropTypes.oneOf([false, '', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  minimize: PropTypes.bool,\n  show: PropTypes.oneOf(['', true, false, 'responsive']),\n  size: PropTypes.oneOf(['', 'sm', 'lg', 'xl']),\n  hideOnMobileClick: PropTypes.bool,\n  aside: PropTypes.bool,\n  colorScheme: PropTypes.string,\n  dropdownMode: PropTypes.oneOf(['', 'openActive', 'close', 'closeInactive', 'noAction']),\n  onShowChange: PropTypes.func,\n  onMinimizeChange: PropTypes.func\n};\nCSidebar.defaultProps = {\n  fixed: true,\n  breakpoint: 'lg',\n  show: 'responsive',\n  hideOnMobileClick: true,\n  colorScheme: 'dark'\n};\nexport default CSidebar;"]},"metadata":{},"sourceType":"module"}