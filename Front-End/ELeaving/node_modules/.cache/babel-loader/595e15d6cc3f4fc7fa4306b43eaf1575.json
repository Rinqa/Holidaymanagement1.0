{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Context } from './CCarousel'; //component - CoreUI / CCarouselIndicators\n\nvar CCarouselIndicators = function CCarouselIndicators(props) {\n  var className = props.className,\n      innerRef = props.innerRef,\n      indicatorsClass = props.indicatorsClass,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"indicatorsClass\"]);\n\n  var _useContext = useContext(Context),\n      itemNumber = _useContext.itemNumber,\n      state = _useContext.state,\n      setState = _useContext.setState,\n      animating = _useContext.animating; //render\n\n\n  var listClasses = classNames(indicatorsClass, className);\n  var indicators = Array.from({\n    length: itemNumber\n  }, function (_, i) {\n    return i;\n  }).map(function (key) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"indicator\" + key,\n      onClick: function onClick() {\n        !animating && key !== state[1] && setState([state[1], key]);\n      },\n      className: state[1] === key ? 'active' : ''\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"ol\", _extends({\n    className: listClasses\n  }, attributes, {\n    ref: innerRef\n  }), indicators);\n};\n\nCCarouselIndicators.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  indicatorsClass: PropTypes.string\n};\nCCarouselIndicators.defaultProps = {\n  indicatorsClass: 'carousel-indicators'\n};\nexport default CCarouselIndicators;","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/@coreui/react/es/carousel/CCarouselIndicators.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","PropTypes","classNames","Context","CCarouselIndicators","props","className","innerRef","indicatorsClass","attributes","_useContext","itemNumber","state","setState","animating","listClasses","indicators","Array","from","length","_","i","map","key","createElement","onClick","ref","propTypes","oneOfType","string","array","object","func","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AAEvC,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5D,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,eAAe,GAAGH,KAAK,CAACG,eAF5B;AAAA,MAGIC,UAAU,GAAGX,6BAA6B,CAACO,KAAD,EAAQ,CAAC,WAAD,EAAc,UAAd,EAA0B,iBAA1B,CAAR,CAH9C;;AAKA,MAAIK,WAAW,GAAGV,UAAU,CAACG,OAAD,CAA5B;AAAA,MACIQ,UAAU,GAAGD,WAAW,CAACC,UAD7B;AAAA,MAEIC,KAAK,GAAGF,WAAW,CAACE,KAFxB;AAAA,MAGIC,QAAQ,GAAGH,WAAW,CAACG,QAH3B;AAAA,MAIIC,SAAS,GAAGJ,WAAW,CAACI,SAJ5B,CAN4D,CAUrB;;;AAGvC,MAAIC,WAAW,GAAGb,UAAU,CAACM,eAAD,EAAkBF,SAAlB,CAA5B;AACA,MAAIU,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAW;AAC1BC,IAAAA,MAAM,EAAER;AADkB,GAAX,EAEd,UAAUS,CAAV,EAAaC,CAAb,EAAgB;AACjB,WAAOA,CAAP;AACD,GAJgB,EAIdC,GAJc,CAIV,UAAUC,GAAV,EAAe;AACpB,WAAO,aAAaxB,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0B;AAC5CD,MAAAA,GAAG,EAAE,cAAcA,GADyB;AAE5CE,MAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,SAACX,SAAD,IAAcS,GAAG,KAAKX,KAAK,CAAC,CAAD,CAA3B,IAAkCC,QAAQ,CAAC,CAACD,KAAK,CAAC,CAAD,CAAN,EAAWW,GAAX,CAAD,CAA1C;AACD,OAJ2C;AAK5CjB,MAAAA,SAAS,EAAEM,KAAK,CAAC,CAAD,CAAL,KAAaW,GAAb,GAAmB,QAAnB,GAA8B;AALG,KAA1B,CAApB;AAOD,GAZgB,CAAjB;AAaA,SAAO,aAAaxB,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0B3B,QAAQ,CAAC;AACrDS,IAAAA,SAAS,EAAES;AAD0C,GAAD,EAEnDN,UAFmD,EAEvC;AACbiB,IAAAA,GAAG,EAAEnB;AADQ,GAFuC,CAAlC,EAIhBS,UAJgB,CAApB;AAKD,CAhCD;;AAkCAZ,mBAAmB,CAACuB,SAApB,GAAgC;AAC9BrB,EAAAA,SAAS,EAAEL,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAAC4B,MAAX,EAAmB5B,SAAS,CAAC6B,KAA7B,EAAoC7B,SAAS,CAAC8B,MAA9C,CAApB,CADmB;AAE9B;AACAxB,EAAAA,QAAQ,EAAEN,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAAC8B,MAAX,EAAmB9B,SAAS,CAAC+B,IAA7B,CAApB,CAHoB;AAI9BxB,EAAAA,eAAe,EAAEP,SAAS,CAAC4B;AAJG,CAAhC;AAMAzB,mBAAmB,CAAC6B,YAApB,GAAmC;AACjCzB,EAAAA,eAAe,EAAE;AADgB,CAAnC;AAGA,eAAeJ,mBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Context } from './CCarousel'; //component - CoreUI / CCarouselIndicators\n\nvar CCarouselIndicators = function CCarouselIndicators(props) {\n  var className = props.className,\n      innerRef = props.innerRef,\n      indicatorsClass = props.indicatorsClass,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"indicatorsClass\"]);\n\n  var _useContext = useContext(Context),\n      itemNumber = _useContext.itemNumber,\n      state = _useContext.state,\n      setState = _useContext.setState,\n      animating = _useContext.animating; //render\n\n\n  var listClasses = classNames(indicatorsClass, className);\n  var indicators = Array.from({\n    length: itemNumber\n  }, function (_, i) {\n    return i;\n  }).map(function (key) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"indicator\" + key,\n      onClick: function onClick() {\n        !animating && key !== state[1] && setState([state[1], key]);\n      },\n      className: state[1] === key ? 'active' : ''\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"ol\", _extends({\n    className: listClasses\n  }, attributes, {\n    ref: innerRef\n  }), indicators);\n};\n\nCCarouselIndicators.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  indicatorsClass: PropTypes.string\n};\nCCarouselIndicators.defaultProps = {\n  indicatorsClass: 'carousel-indicators'\n};\nexport default CCarouselIndicators;"]},"metadata":{},"sourceType":"module"}