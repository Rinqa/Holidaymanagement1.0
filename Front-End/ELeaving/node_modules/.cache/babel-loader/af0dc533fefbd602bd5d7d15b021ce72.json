{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CSpinner\n\nvar CSpinner = function CSpinner(props) {\n  var Tag = props.tag,\n      className = props.className,\n      innerRef = props.innerRef,\n      grow = props.grow,\n      size = props.size,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"grow\", \"size\", \"color\"]); //render\n\n\n  var type = grow ? 'grow' : 'border';\n  var classes = classNames(\"spinner-\" + type, size && \"spinner-\" + type + \"-\" + size, color && \"text-\" + color, className);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes,\n    \"aria-hidden\": \"false\",\n    \"aria-label\": \"Loading\",\n    role: \"status\"\n  }, attributes, {\n    ref: innerRef\n  }));\n};\n\nCSpinner.propTypes = {\n  tag: tagPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  grow: PropTypes.bool,\n  size: PropTypes.string,\n  color: PropTypes.string\n};\nCSpinner.defaultProps = {\n  tag: 'div'\n};\nexport default CSpinner;","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/@coreui/react/es/spinner/CSpinner.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","tagPropType","CSpinner","props","Tag","tag","className","innerRef","grow","size","color","attributes","type","classes","createElement","role","ref","propTypes","oneOfType","string","array","object","func","bool","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAAkD;;AAElD,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,GAAG,GAAGD,KAAK,CAACE,GAAhB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,QAAQ,GAAGJ,KAAK,CAACI,QAFrB;AAAA,MAGIC,IAAI,GAAGL,KAAK,CAACK,IAHjB;AAAA,MAIIC,IAAI,GAAGN,KAAK,CAACM,IAJjB;AAAA,MAKIC,KAAK,GAAGP,KAAK,CAACO,KALlB;AAAA,MAMIC,UAAU,GAAGd,6BAA6B,CAACM,KAAD,EAAQ,CAAC,KAAD,EAAQ,WAAR,EAAqB,UAArB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,OAAjD,CAAR,CAN9C,CADsC,CAO4E;;;AAGlH,MAAIS,IAAI,GAAGJ,IAAI,GAAG,MAAH,GAAY,QAA3B;AACA,MAAIK,OAAO,GAAGb,UAAU,CAAC,aAAaY,IAAd,EAAoBH,IAAI,IAAI,aAAaG,IAAb,GAAoB,GAApB,GAA0BH,IAAtD,EAA4DC,KAAK,IAAI,UAAUA,KAA/E,EAAsFJ,SAAtF,CAAxB;AACA,SAAO,aAAaR,KAAK,CAACgB,aAAN,CAAoBV,GAApB,EAAyBR,QAAQ,CAAC;AACpDU,IAAAA,SAAS,EAAEO,OADyC;AAEpD,mBAAe,OAFqC;AAGpD,kBAAc,SAHsC;AAIpDE,IAAAA,IAAI,EAAE;AAJ8C,GAAD,EAKlDJ,UALkD,EAKtC;AACbK,IAAAA,GAAG,EAAET;AADQ,GALsC,CAAjC,CAApB;AAQD,CApBD;;AAsBAL,QAAQ,CAACe,SAAT,GAAqB;AACnBZ,EAAAA,GAAG,EAAEJ,WADc;AAEnBK,EAAAA,SAAS,EAAEP,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAACqB,KAA7B,EAAoCrB,SAAS,CAACsB,MAA9C,CAApB,CAFQ;AAGnB;AACAd,EAAAA,QAAQ,EAAER,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,IAA7B,CAApB,CAJS;AAKnBd,EAAAA,IAAI,EAAET,SAAS,CAACwB,IALG;AAMnBd,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MANG;AAOnBT,EAAAA,KAAK,EAAEX,SAAS,CAACoB;AAPE,CAArB;AASAjB,QAAQ,CAACsB,YAAT,GAAwB;AACtBnB,EAAAA,GAAG,EAAE;AADiB,CAAxB;AAGA,eAAeH,QAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CSpinner\n\nvar CSpinner = function CSpinner(props) {\n  var Tag = props.tag,\n      className = props.className,\n      innerRef = props.innerRef,\n      grow = props.grow,\n      size = props.size,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"grow\", \"size\", \"color\"]); //render\n\n\n  var type = grow ? 'grow' : 'border';\n  var classes = classNames(\"spinner-\" + type, size && \"spinner-\" + type + \"-\" + size, color && \"text-\" + color, className);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes,\n    \"aria-hidden\": \"false\",\n    \"aria-label\": \"Loading\",\n    role: \"status\"\n  }, attributes, {\n    ref: innerRef\n  }));\n};\n\nCSpinner.propTypes = {\n  tag: tagPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  grow: PropTypes.bool,\n  size: PropTypes.string,\n  color: PropTypes.string\n};\nCSpinner.defaultProps = {\n  tag: 'div'\n};\nexport default CSpinner;"]},"metadata":{},"sourceType":"module"}