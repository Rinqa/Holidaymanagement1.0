{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar isRegExp = require('../internals/is-regexp');\n\nvar getRegExpFlags = require('../internals/regexp-flags');\n\nvar getSubstitution = require('../internals/get-substitution');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function stringIndexOf(string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n}; // `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n\n\n$({\n  target: 'String',\n  proto: true\n}, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n\n      if (IS_REG_EXP) {\n        flags = String(requireObjectCoercible('flags' in RegExpPrototype ? searchValue.flags : getRegExpFlags.call(searchValue)));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n\n      replacer = searchValue[REPLACE];\n\n      if (replacer !== undefined) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return String(O).replace(searchValue, replaceValue);\n      }\n    }\n\n    string = String(O);\n    searchString = String(searchValue);\n    functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = String(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = String(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n\n    return result;\n  }\n});","map":{"version":3,"sources":["C:/Users/iFix/Documents/GitHub/Holidaymanagement1.0/Front-End/ELeaving/node_modules/core-js/modules/es.string.replace-all.js"],"names":["$","require","requireObjectCoercible","isRegExp","getRegExpFlags","getSubstitution","wellKnownSymbol","IS_PURE","REPLACE","RegExpPrototype","RegExp","prototype","max","Math","stringIndexOf","string","searchValue","fromIndex","length","indexOf","target","proto","replaceAll","replaceValue","O","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","replacement","position","endOfLastMatch","result","String","call","TypeError","undefined","replace","slice"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isRegExp = require('../internals/is-regexp');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = String(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getRegExpFlags.call(searchValue)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = searchValue[REPLACE];\n      if (replacer !== undefined) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return String(O).replace(searchValue, replaceValue);\n      }\n    }\n    string = String(O);\n    searchString = String(searchValue);\n    functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = String(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = String(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n    return result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}